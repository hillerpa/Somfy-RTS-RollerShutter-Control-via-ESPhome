esphome:
  name: "esphome-somfy"
  friendly_name: "esphome-somfy"
  platform: ESP8266
  board: nodemcuv2
  libraries:
    - EEPROM
    - SPI
    - SmartRC-CC1101-Driver-Lib@2.5.6
    - Somfy_Remote_Lib@0.4.1
  includes:
    - somfy/somfy_secrets.h
    - somfy/somfy_cover.h

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "key="

ota:
  password: "password"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret fallback_ssid
    password: !secret fallback_password

captive_portal:

web_server:
  port: 80

sensor:
  - platform: uptime
    name: Uptime Sensor

  - platform: wifi_signal
    name: "WiFi Signal Sensor"

cover:
  - platform: custom
    lambda: |-
      auto somfy_remote = new SomfyESPRemote();
      somfy_remote->add_cover("somfy", "Küche", SOMFY_REMOTE_KÜCHE);
      somfy_remote->add_cover("somfy", "Esszimmer Fenster", SOMFY_REMOTE_ESSZIMMER_FENSTER);
      somfy_remote->add_cover("somfy", "Esszimmer Terassentür", SOMFY_REMOTE_ESSZIMMER_TERRASSENTÜR);
      somfy_remote->add_cover("somfy", "Wohnzimmer Terassentür", SOMFY_REMOTE_WOHNZIMMER_TERRASSENTÜR);
      somfy_remote->add_cover("somfy", "Wohnzimmer Fenster", SOMFY_REMOTE_WOHNZIMMER_FENSTER);
      App.register_component(somfy_remote);
      return somfy_remote->covers;

    covers:
      - id: "somfy"
        name: "Somfy Cover"
      - id: "somfy2"
        name: "Somfy Cover2"

switch:
  - platform: template
    name: "PROG"
    turn_on_action:
      - lambda: |-
          ((SomfyESPCover*)id(somfy))->program();
  - platform: template
    name: "STOP"
    turn_on_action:
      - lambda: |-
          ((SomfyESPCover*)id(somfy))->stop();
  - platform: template
    name: "PROG2"
    turn_on_action:
      - lambda: |-
          ((SomfyESPCover*)id(somfy2))->program();
  - platform: template
    name: "STOP2"
    turn_on_action:
      - lambda: |-
          ((SomfyESPCover*)id(somfy2))->stop();
    
